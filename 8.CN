#include <stdio.h>
#include <string.h>

#define MAX_LENGTH 256
int main() {
    char keyword[MAX_LENGTH];
    char plaintext[MAX_LENGTH];
    char alphabet[26] = "abcdefghijklmnopqrstuvwxyz";
    char cipher_sequence[27];
    printf("Enter the keyword: ");
    fgets(keyword, MAX_LENGTH, stdin);
    keyword[strlen(keyword) - 1] = '\0';
    printf("Enter the plaintext: ");
    fgets(plaintext, MAX_LENGTH, stdin);
    plaintext[strlen(plaintext) - 1] = '\0';
    int i, j, k = 0;
    for (i = 0; i < strlen(keyword); i++) {
        cipher_sequence[k++] = tolower(keyword[i]);
    }
    for (i = 0; i < 26; i++) {
        int found = 0;
        for (j = 0; j < k; j++) {
            if (alphabet[i] == cipher_sequence[j]) {
                found = 1;
                break;
            }
        }
        if (!found) {
            cipher_sequence[k++] = alphabet[i];
        }
    }
    cipher_sequence[k] = '\0';
    printf("Cipher sequence: %s\n", cipher_sequence);
    char ciphertext[MAX_LENGTH];
    for (i = 0; i < strlen(plaintext); i++) {
        if (isalpha(plaintext[i])) {
            int index = tolower(plaintext[i]) - 'a';
            if (isupper(plaintext[i])) {
                ciphertext[i] = toupper(cipher_sequence[index]);
            } else {
                ciphertext[i] = cipher_sequence[index];
            }
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';
    printf("Ciphertext: %s\n", ciphertext);
    char decrypted[MAX_LENGTH];
    for (i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            for (j = 0; j < 26; j++) {
                if (ciphertext[i] == toupper(cipher_sequence[j]) || ciphertext[i] == cipher_sequence[j]) {
                    if (isupper(ciphertext[i])) {
                        decrypted[i] = toupper('a' + j);
                    } else {
                        decrypted[i] = 'a' + j;
                    }
                    break;
                }
            }
        } else {
            decrypted[i] = ciphertext[i];
        }
    }
    decrypted[i] = '\0';
    printf("Plaintext: %s\n", decrypted);
    return 0;
}
