#include <stdio.h>
#include <string.h>
int gcd(int a, int b) {
    if (b == 0) {
        return a;
    }
    return gcd(b, a % b);
}
int main() {
    char plaintext[100], ciphertext[100];
    int a, b, i, keyLen, plaintextLen;
    int alphabetSize = 26;
    printf("Values of a not allowed (a is not coprime with 26):\n");
    for (int a = 1; a < alphabetSize; a++) {
        if (gcd(a, alphabetSize) != 1) {
            printf("%d ", a);
        }
    }
    printf("\n");
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';
    printf("Enter the value of a (must be coprime with 26): ");
    scanf("%d", &a);
    if (gcd(a, alphabetSize) != 1) {
        printf("Error: 'a' is not coprime with 26. Please enter a valid value.\n");
        return 1;
    }
    printf("Enter the value of b: ");
    scanf("%d", &b);
    plaintextLen = strlen(plaintext);
    for (i = 0; i < plaintextLen; i++) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = ((a * (plaintext[i] - 'a') + b) % 26) + 'a';
        } else if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = ((a * (plaintext[i] - 'A') + b) % 26) + 'A';
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[plaintextLen] = '\0';
    printf("Ciphertext: %s\n", ciphertext);
    return 0;
}
